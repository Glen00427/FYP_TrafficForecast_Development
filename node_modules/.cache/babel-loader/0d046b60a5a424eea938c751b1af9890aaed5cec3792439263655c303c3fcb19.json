{"ast":null,"code":"var _process$env,_process$env2;import{supabase}from\"../lib/supabaseClient\";const BUCKET=typeof process!==\"undefined\"&&((_process$env=process.env)===null||_process$env===void 0?void 0:_process$env.REACT_APP_SB_BUCKET)||\"incident-photos\";// Set to \"true\" (string) in env if your bucket is PRIVATE and you want signed URLs\nconst USE_SIGNED_URLS=(typeof process!==\"undefined\"&&((_process$env2=process.env)===null||_process$env2===void 0?void 0:_process$env2.REACT_APP_SB_SIGNED))===\"true\";// Sanitize filenames\nfunction cleanName(){let name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";return name.replace(/[^\\w.\\-]+/g,\"_\").slice(0,120);}export async function saveIncidentReport(_ref){var _form$location,_form$location2,_form$location3;let{form,user}=_ref;let photoUrl=null;// ---- 1) Optional photo upload ----\nif((form===null||form===void 0?void 0:form.photo)instanceof File){const userId=(user===null||user===void 0?void 0:user.id)||\"guest\";const fname=\"\".concat(Date.now(),\"-\").concat(cleanName(form.photo.name||\"photo.jpg\"));const key=\"\".concat(userId,\"/\").concat(fname);const{data:up,error:upErr}=await supabase.storage.from(BUCKET).upload(key,form.photo,{cacheControl:\"3600\",upsert:false});if(upErr){if(/Bucket not found/i.test(upErr.message)){throw new Error(\"Storage bucket \\\"\".concat(BUCKET,\"\\\" not found. Create it in Supabase \\u2192 Storage (or set REACT_APP_SB_BUCKET to an existing bucket).\"));}throw upErr;}if(USE_SIGNED_URLS){var _signed$signedUrl;// PRIVATE bucket\nconst{data:signed,error}=await supabase.storage.from(BUCKET).createSignedUrl(up.path,60*60*24*30);// 30 days\nif(error)throw error;photoUrl=(_signed$signedUrl=signed===null||signed===void 0?void 0:signed.signedUrl)!==null&&_signed$signedUrl!==void 0?_signed$signedUrl:null;}else{var _pub$publicUrl;// PUBLIC bucket\nconst{data:pub}=supabase.storage.from(BUCKET).getPublicUrl(up.path);photoUrl=(_pub$publicUrl=pub===null||pub===void 0?void 0:pub.publicUrl)!==null&&_pub$publicUrl!==void 0?_pub$publicUrl:null;}}// ---- 2) Map form → DB row ----\nconst payload={user:(user===null||user===void 0?void 0:user.name)||(user===null||user===void 0?void 0:user.email)||\"Guest\",incidentType:(form===null||form===void 0?void 0:form.type)||null,severity:((form===null||form===void 0?void 0:form.severity)||\"\").toLowerCase(),location:(form===null||form===void 0?void 0:(_form$location=form.location)===null||_form$location===void 0?void 0:_form$location.road)||(form!==null&&form!==void 0&&(_form$location2=form.location)!==null&&_form$location2!==void 0&&_form$location2.gps?\"\".concat(form.location.gps.lat,\",\").concat(form.location.gps.lng):null),fullAddress:(form===null||form===void 0?void 0:(_form$location3=form.location)===null||_form$location3===void 0?void 0:_form$location3.fullAddress)||null,description:(form===null||form===void 0?void 0:form.description)||null,photo_url:photoUrl,createdAt:new Date().toISOString()};const{data,error}=await supabase.from(\"incident_report\").insert([payload]).select().single();if(error)throw error;return data;}","map":{"version":3,"names":["supabase","BUCKET","process","_process$env","env","REACT_APP_SB_BUCKET","USE_SIGNED_URLS","_process$env2","REACT_APP_SB_SIGNED","cleanName","name","arguments","length","undefined","replace","slice","saveIncidentReport","_ref","_form$location","_form$location2","_form$location3","form","user","photoUrl","photo","File","userId","id","fname","concat","Date","now","key","data","up","error","upErr","storage","from","upload","cacheControl","upsert","test","message","Error","_signed$signedUrl","signed","createSignedUrl","path","signedUrl","_pub$publicUrl","pub","getPublicUrl","publicUrl","payload","email","incidentType","type","severity","toLowerCase","location","road","gps","lat","lng","fullAddress","description","photo_url","createdAt","toISOString","insert","select","single"],"sources":["/workspaces/FYP_TrafficForecast/src/components/saveIncident.js"],"sourcesContent":["import { supabase } from \"../lib/supabaseClient\";\n\nconst BUCKET =\n  (typeof process !== \"undefined\" && process.env?.REACT_APP_SB_BUCKET) ||\n  \"incident-photos\";\n\n// Set to \"true\" (string) in env if your bucket is PRIVATE and you want signed URLs\nconst USE_SIGNED_URLS =\n  (typeof process !== \"undefined\" && process.env?.REACT_APP_SB_SIGNED) ===\n  \"true\";\n\n// Sanitize filenames\nfunction cleanName(name = \"\") {\n  return name.replace(/[^\\w.\\-]+/g, \"_\").slice(0, 120);\n}\n\nexport async function saveIncidentReport({ form, user }) {\n  let photoUrl = null;\n\n  // ---- 1) Optional photo upload ----\n  if (form?.photo instanceof File) {\n    const userId = user?.id || \"guest\";\n    const fname = `${Date.now()}-${cleanName(form.photo.name || \"photo.jpg\")}`;\n    const key = `${userId}/${fname}`;\n\n    const { data: up, error: upErr } = await supabase.storage\n      .from(BUCKET)\n      .upload(key, form.photo, { cacheControl: \"3600\", upsert: false });\n\n    if (upErr) {\n      if (/Bucket not found/i.test(upErr.message)) {\n        throw new Error(\n          `Storage bucket \"${BUCKET}\" not found. Create it in Supabase → Storage (or set REACT_APP_SB_BUCKET to an existing bucket).`\n        );\n      }\n      throw upErr;\n    }\n\n    if (USE_SIGNED_URLS) {\n      // PRIVATE bucket\n      const { data: signed, error } = await supabase.storage\n        .from(BUCKET)\n        .createSignedUrl(up.path, 60 * 60 * 24 * 30); // 30 days\n      if (error) throw error;\n      photoUrl = signed?.signedUrl ?? null;\n    } else {\n      // PUBLIC bucket\n      const { data: pub } = supabase.storage.from(BUCKET).getPublicUrl(up.path);\n      photoUrl = pub?.publicUrl ?? null;\n    }\n  }\n\n  // ---- 2) Map form → DB row ----\n  const payload = {\n    user: user?.name || user?.email || \"Guest\",\n    incidentType: form?.type || null,\n    severity: (form?.severity || \"\").toLowerCase(),\n    location:\n      form?.location?.road ||\n      (form?.location?.gps\n        ? `${form.location.gps.lat},${form.location.gps.lng}`\n        : null),\n    fullAddress: form?.location?.fullAddress || null,\n    description: form?.description || null,\n    photo_url: photoUrl,\n    createdAt: new Date().toISOString(),\n  };\n\n  const { data, error } = await supabase\n    .from(\"incident_report\")\n    .insert([payload])\n    .select()\n    .single();\n\n  if (error) throw error;\n  return data;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}